<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.biuaxia.odm.generate.mapper.CtpEnumItemMapper">
    <resultMap id="BaseResultMap" type="cn.biuaxia.odm.generate.domain.CtpEnumItem">
        <!--@mbg.generated-->
        <!--@Table CTP_ENUM_ITEM-->
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="REF_ENUMID" jdbcType="BIGINT" property="refEnumid"/>
        <result column="SHOWVALUE" jdbcType="VARCHAR" property="showvalue"/>
        <result column="ENUMVALUE" jdbcType="VARCHAR" property="enumvalue"/>
        <result column="SORTNUMBER" jdbcType="INTEGER" property="sortnumber"/>
        <result column="STATE" jdbcType="SMALLINT" property="state"/>
        <result column="OUTPUT_SWITCH" jdbcType="SMALLINT" property="outputSwitch"/>
        <result column="ORG_ACCOUNT_ID" jdbcType="BIGINT" property="orgAccountId"/>
        <result column="PARENT_ID" jdbcType="BIGINT" property="parentId"/>
        <result column="ROOT_ID" jdbcType="BIGINT" property="rootId"/>
        <result column="LEVEL_NUM" jdbcType="SMALLINT" property="levelNum"/>
        <result column="DESCRIPTION" jdbcType="LONGVARCHAR" property="description"/>
        <result column="IFUSE" jdbcType="VARCHAR" property="ifuse"/>
        <result column="I18N" jdbcType="SMALLINT" property="i18n"/>
        <result column="EXT1" jdbcType="BIGINT" property="ext1"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        ID, REF_ENUMID, SHOWVALUE, ENUMVALUE, SORTNUMBER, `STATE`, OUTPUT_SWITCH, ORG_ACCOUNT_ID,
        PARENT_ID, ROOT_ID, LEVEL_NUM, DESCRIPTION, IFUSE, I18N, EXT1
    </sql>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update CTP_ENUM_ITEM
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="REF_ENUMID = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.refEnumid,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="SHOWVALUE = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.showvalue,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="ENUMVALUE = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.enumvalue,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="SORTNUMBER = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.sortnumber,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="`STATE` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.state,jdbcType=SMALLINT}
                </foreach>
            </trim>
            <trim prefix="OUTPUT_SWITCH = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.outputSwitch,jdbcType=SMALLINT}
                </foreach>
            </trim>
            <trim prefix="ORG_ACCOUNT_ID = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.orgAccountId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="PARENT_ID = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.parentId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="ROOT_ID = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.rootId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="LEVEL_NUM = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.levelNum,jdbcType=SMALLINT}
                </foreach>
            </trim>
            <trim prefix="DESCRIPTION = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.description,jdbcType=LONGVARCHAR}
                </foreach>
            </trim>
            <trim prefix="IFUSE = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.ifuse,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="I18N = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.i18n,jdbcType=SMALLINT}
                </foreach>
            </trim>
            <trim prefix="EXT1 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when ID = #{item.id,jdbcType=BIGINT} then #{item.ext1,jdbcType=BIGINT}
                </foreach>
            </trim>
        </trim>
        where ID in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update CTP_ENUM_ITEM
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="REF_ENUMID = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.refEnumid != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.refEnumid,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="SHOWVALUE = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.showvalue != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.showvalue,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="ENUMVALUE = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.enumvalue != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.enumvalue,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="SORTNUMBER = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.sortnumber != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.sortnumber,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`STATE` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.state != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.state,jdbcType=SMALLINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="OUTPUT_SWITCH = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.outputSwitch != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.outputSwitch,jdbcType=SMALLINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="ORG_ACCOUNT_ID = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.orgAccountId != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.orgAccountId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="PARENT_ID = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.parentId != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.parentId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="ROOT_ID = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.rootId != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.rootId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="LEVEL_NUM = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.levelNum != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.levelNum,jdbcType=SMALLINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="DESCRIPTION = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.description != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.description,jdbcType=LONGVARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="IFUSE = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.ifuse != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.ifuse,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="I18N = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.i18n != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.i18n,jdbcType=SMALLINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="EXT1 = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.ext1 != null">
                        when ID = #{item.id,jdbcType=BIGINT} then #{item.ext1,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
        </trim>
        where ID in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" parameterType="map">
        <!--@mbg.generated-->
        insert into CTP_ENUM_ITEM
        (ID, REF_ENUMID, SHOWVALUE, ENUMVALUE, SORTNUMBER, `STATE`, OUTPUT_SWITCH, ORG_ACCOUNT_ID,
        PARENT_ID, ROOT_ID, LEVEL_NUM, DESCRIPTION, IFUSE, I18N, EXT1)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.refEnumid,jdbcType=BIGINT}, #{item.showvalue,jdbcType=VARCHAR},
            #{item.enumvalue,jdbcType=VARCHAR}, #{item.sortnumber,jdbcType=INTEGER}, #{item.state,jdbcType=SMALLINT},
            #{item.outputSwitch,jdbcType=SMALLINT}, #{item.orgAccountId,jdbcType=BIGINT},
            #{item.parentId,jdbcType=BIGINT},
            #{item.rootId,jdbcType=BIGINT}, #{item.levelNum,jdbcType=SMALLINT},
            #{item.description,jdbcType=LONGVARCHAR},
            #{item.ifuse,jdbcType=VARCHAR}, #{item.i18n,jdbcType=SMALLINT}, #{item.ext1,jdbcType=BIGINT}
            )
        </foreach>
    </insert>
    <insert id="insertOrUpdate" parameterType="cn.biuaxia.odm.generate.domain.CtpEnumItem">
        <!--@mbg.generated-->
        insert into CTP_ENUM_ITEM
        (ID, REF_ENUMID, SHOWVALUE, ENUMVALUE, SORTNUMBER, `STATE`, OUTPUT_SWITCH, ORG_ACCOUNT_ID,
        PARENT_ID, ROOT_ID, LEVEL_NUM, DESCRIPTION, IFUSE, I18N, EXT1)
        values
        (#{id,jdbcType=BIGINT}, #{refEnumid,jdbcType=BIGINT}, #{showvalue,jdbcType=VARCHAR},
        #{enumvalue,jdbcType=VARCHAR}, #{sortnumber,jdbcType=INTEGER}, #{state,jdbcType=SMALLINT},
        #{outputSwitch,jdbcType=SMALLINT}, #{orgAccountId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT},
        #{rootId,jdbcType=BIGINT}, #{levelNum,jdbcType=SMALLINT}, #{description,jdbcType=LONGVARCHAR},
        #{ifuse,jdbcType=VARCHAR}, #{i18n,jdbcType=SMALLINT}, #{ext1,jdbcType=BIGINT})
        on duplicate key update
        ID = #{id,jdbcType=BIGINT},
        REF_ENUMID = #{refEnumid,jdbcType=BIGINT},
        SHOWVALUE = #{showvalue,jdbcType=VARCHAR},
        ENUMVALUE = #{enumvalue,jdbcType=VARCHAR},
        SORTNUMBER = #{sortnumber,jdbcType=INTEGER},
        `STATE` = #{state,jdbcType=SMALLINT},
        OUTPUT_SWITCH = #{outputSwitch,jdbcType=SMALLINT},
        ORG_ACCOUNT_ID = #{orgAccountId,jdbcType=BIGINT},
        PARENT_ID = #{parentId,jdbcType=BIGINT},
        ROOT_ID = #{rootId,jdbcType=BIGINT},
        LEVEL_NUM = #{levelNum,jdbcType=SMALLINT},
        DESCRIPTION = #{description,jdbcType=LONGVARCHAR},
        IFUSE = #{ifuse,jdbcType=VARCHAR},
        I18N = #{i18n,jdbcType=SMALLINT},
        EXT1 = #{ext1,jdbcType=BIGINT}
    </insert>
    <insert id="insertOrUpdateSelective" parameterType="cn.biuaxia.odm.generate.domain.CtpEnumItem">
        <!--@mbg.generated-->
        insert into CTP_ENUM_ITEM
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="refEnumid != null">
                REF_ENUMID,
            </if>
            <if test="showvalue != null">
                SHOWVALUE,
            </if>
            <if test="enumvalue != null">
                ENUMVALUE,
            </if>
            <if test="sortnumber != null">
                SORTNUMBER,
            </if>
            <if test="state != null">
                `STATE`,
            </if>
            <if test="outputSwitch != null">
                OUTPUT_SWITCH,
            </if>
            <if test="orgAccountId != null">
                ORG_ACCOUNT_ID,
            </if>
            <if test="parentId != null">
                PARENT_ID,
            </if>
            <if test="rootId != null">
                ROOT_ID,
            </if>
            <if test="levelNum != null">
                LEVEL_NUM,
            </if>
            <if test="description != null">
                DESCRIPTION,
            </if>
            <if test="ifuse != null">
                IFUSE,
            </if>
            <if test="i18n != null">
                I18N,
            </if>
            <if test="ext1 != null">
                EXT1,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="refEnumid != null">
                #{refEnumid,jdbcType=BIGINT},
            </if>
            <if test="showvalue != null">
                #{showvalue,jdbcType=VARCHAR},
            </if>
            <if test="enumvalue != null">
                #{enumvalue,jdbcType=VARCHAR},
            </if>
            <if test="sortnumber != null">
                #{sortnumber,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=SMALLINT},
            </if>
            <if test="outputSwitch != null">
                #{outputSwitch,jdbcType=SMALLINT},
            </if>
            <if test="orgAccountId != null">
                #{orgAccountId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="rootId != null">
                #{rootId,jdbcType=BIGINT},
            </if>
            <if test="levelNum != null">
                #{levelNum,jdbcType=SMALLINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=LONGVARCHAR},
            </if>
            <if test="ifuse != null">
                #{ifuse,jdbcType=VARCHAR},
            </if>
            <if test="i18n != null">
                #{i18n,jdbcType=SMALLINT},
            </if>
            <if test="ext1 != null">
                #{ext1,jdbcType=BIGINT},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                ID = #{id,jdbcType=BIGINT},
            </if>
            <if test="refEnumid != null">
                REF_ENUMID = #{refEnumid,jdbcType=BIGINT},
            </if>
            <if test="showvalue != null">
                SHOWVALUE = #{showvalue,jdbcType=VARCHAR},
            </if>
            <if test="enumvalue != null">
                ENUMVALUE = #{enumvalue,jdbcType=VARCHAR},
            </if>
            <if test="sortnumber != null">
                SORTNUMBER = #{sortnumber,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                `STATE` = #{state,jdbcType=SMALLINT},
            </if>
            <if test="outputSwitch != null">
                OUTPUT_SWITCH = #{outputSwitch,jdbcType=SMALLINT},
            </if>
            <if test="orgAccountId != null">
                ORG_ACCOUNT_ID = #{orgAccountId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                PARENT_ID = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="rootId != null">
                ROOT_ID = #{rootId,jdbcType=BIGINT},
            </if>
            <if test="levelNum != null">
                LEVEL_NUM = #{levelNum,jdbcType=SMALLINT},
            </if>
            <if test="description != null">
                DESCRIPTION = #{description,jdbcType=LONGVARCHAR},
            </if>
            <if test="ifuse != null">
                IFUSE = #{ifuse,jdbcType=VARCHAR},
            </if>
            <if test="i18n != null">
                I18N = #{i18n,jdbcType=SMALLINT},
            </if>
            <if test="ext1 != null">
                EXT1 = #{ext1,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
</mapper>